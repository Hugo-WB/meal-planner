{"version":3,"sources":["firebase.ts","reducers/localData.ts","reducers/store.ts","Components/HomeNavBar/HomeNavBar.tsx","views/Homepage/Homepage.tsx","Components/TopNav/TopNav.tsx","views/Dashboard/Dashboard.tsx","Components/RecipeCard/RecipeCard.tsx","views/Recipes/Recipes.tsx","views/Plan/Plan.tsx","views/Authenticate/Authenticate.tsx","App.tsx","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","initialState","currentPage","rootReducer","combineReducers","firebaseReducer","firestoreReducer","localData","state","action","type","user","HomeNavBar","useState","fixedMenu","setFixedMenu","history","useHistory","Visibility","onTopPassed","onTopVisible","once","Menu","fixed","undefined","size","inverted","pointing","secondary","Item","as","active","to","position","Button","onClick","push","Homepage","useEffect","console","log","Segment","Container","text","className","Header","content","textAlign","id","Grid","centerd","container","stackable","Row","columns","Column","width","floated","Image","AddRecipeModal","useFirestore","open","setOpen","name","description","imageSrc","ingredients","steps","recipe","setRecipe","handleChange","event","target","value","split","Modal","closeIcon","onClose","onOpen","trigger","color","align","Content","scrolling","Form","Group","widths","Input","fluid","label","placeholder","onChange","TextArea","Actions","Icon","length","url","http","XMLHttpRequest","send","status","imageExists","collection","add","alert","TopNav","props","location","useLocation","Links","map","link","pathname","charAt","toUpperCase","slice","useSelector","icon","signOut","then","catch","error","message","Dashboard","contextRef","createRef","src","centered","Component","connect","RecipeCard","showModal","switchModal","setState","Card","this","style","margin","Meta","category","Description","image","List","bulleted","ingredient","RecipeCards","useFirestoreConnect","recipes","ordered","marginTop","Plan","Authenticate","db","email","password","userInfo","setUserInfo","setError","verticalAlign","height","backgroundColor","maxWidth","dividing","paddingBottom","piled","iconPosition","e","signInWithEmailAndPassword","result","doc","uid","set","username","code","errorMessage","marginBottom","provider","GoogleAuthProvider","signInWithPopup","credential","labelPosition","signInAnonymously","Message","header","basic","createUserWithEmailAndPassword","routes","path","component","Recipes","dispatch","useDispatch","onAuthStateChanged","route","exact","store","createStore","rrfProps","config","userProfile","createFirestoreInstance","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qWAYAA,IAASC,cAVM,CACbC,OAAQ,0CACRC,WAAY,qCACZC,YAAa,4CACbC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGjBT,IAASU,YACMV,QAAf,E,yBCNMW,EAA0B,CAC9BC,YAAa,aC+BAC,EANKC,YAAgB,CAClCd,SAAUe,kBACVL,UAAWM,mBACXC,UDzBa,WAAmD,IAAlDC,EAAiD,uDAAzCP,EAAcQ,EAA2B,uCAC/D,OAAQA,EAAOC,MACb,IAAK,aACH,OAAO,2BACFF,GADL,IAEEG,KAAMF,EAAOE,OAEjB,QACE,OAAOH,M,yGEhBE,SAASI,IAAc,IAAD,EACDC,oBAAS,GADR,mBAC5BC,EAD4B,KACjBC,EADiB,KAE7BC,EAAUC,cAEhB,OACE,6BACE,kBAACC,EAAA,EAAD,CACEC,YAAa,kBAAMJ,GAAa,IAChCK,aAAc,kBAAML,GAAa,IACjCM,MAAM,GAEN,kBAACC,EAAA,EAAD,CACEC,MAAOT,EAAY,WAAQU,EAC3BC,KAAK,QACLC,UAAU,EACVC,UAAQ,EACRC,WAAS,GAET,kBAACN,EAAA,EAAKO,KAAN,CAAWC,GAAG,IAAIC,QAAM,GAAxB,QAGA,kBAACT,EAAA,EAAKO,KAAN,CAAWC,GAAG,KACZ,kBAAC,IAAD,CAAME,GAAG,cAAT,SAEF,kBAACV,EAAA,EAAKO,KAAN,CAAWI,SAAS,SAClB,kBAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMnB,EAAQoB,KAAK,mBAApC,e,OChBG,SAASC,IAKtB,OAJAC,qBAAU,WACRC,QAAQC,IAAI,WAIZ,6BACE,kBAACC,EAAA,EAAD,CAASf,UAAQ,GACf,kBAAC,EAAD,MACA,kBAACgB,EAAA,EAAD,CAAWC,MAAI,EAACC,UAAU,mBACxB,kBAACC,EAAA,EAAD,CACEnB,UAAQ,EACRoB,QAAQ,eACRC,UAAU,SACVtB,KAAK,WAIX,kBAACgB,EAAA,EAAD,CAASO,GAAG,sBACV,kBAACC,EAAA,EAAD,CAAMC,SAAO,EAACC,WAAS,EAACC,WAAS,GAC/B,kBAACH,EAAA,EAAKI,IAAN,CAAUC,QAAQ,QAAQP,UAAU,UAClC,kBAACE,EAAA,EAAKM,OAAN,CAAaC,MAAO,IAClB,kBAACX,EAAA,EAAD,CAAQpB,KAAK,QAAb,gBACA,2PAOF,kBAACwB,EAAA,EAAKM,OAAN,CAAaE,QAAQ,SACnB,kBAACC,EAAA,EAAD,W,oFCjCRC,G,OAAiB,WACrB,IAAM3D,EAAY4D,yBACZ5C,EAAUC,cAFW,EAGHJ,oBAAS,GAHN,mBAGpBgD,EAHoB,KAGdC,EAHc,OAICjD,mBAAiB,CAC3CkD,KAAM,GACNC,YAAa,GACbC,SAAU,GACVC,YAAa,GACbC,MAAO,KATkB,mBAIpBC,EAJoB,KAIZC,EAJY,KAWrBC,EAAe,SAACC,GACpB,IAAMR,EAAOQ,EAAMC,OAAOT,KACtBU,EAAQF,EAAMC,OAAOC,MACZ,gBAATV,IACFU,EAAQA,EAAMC,MAAM,OAEtBL,EAAU,2BACLD,GADI,kBAENL,EAAOU,KAEVlC,QAAQC,IAAI4B,IA2Bd,OACE,kBAACO,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,kBAAMf,GAAQ,IACvBgB,OAAQ,kBAAMhB,GAAQ,IACtBD,KAAMA,EACNkB,QACE,kBAAC7C,EAAA,EAAD,CAAQ8C,MAAM,QAAQC,MAAM,UAA5B,eAKF,kBAACN,EAAA,EAAM9B,OAAP,CAAcoC,MAAM,UAApB,kBACA,kBAACN,EAAA,EAAMO,QAAP,CAAeC,WAAS,GACtB,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CAAYC,OAAO,SACjB,kBAACF,EAAA,EAAKG,MAAN,CACEC,OAAK,EACLC,MAAM,cACNC,YAAY,QACZC,SAAUrB,EACVP,KAAK,SAEP,kBAACqB,EAAA,EAAKG,MAAN,CACEC,OAAK,EACLC,MAAM,cACNC,YAAY,gBACZC,SAAUrB,EACVP,KAAK,iBAGT,kBAACqB,EAAA,EAAKG,MAAN,CACEE,MAAM,aACNC,YAAY,kCACZC,SAAUrB,EACVP,KAAK,aAEP,kBAACqB,EAAA,EAAKQ,SAAN,CACEH,MAAM,cACNC,YACE,oEAEFC,SAAUrB,EACVP,KAAK,gBAEP,kBAACqB,EAAA,EAAKQ,SAAN,CACEH,MAAM,QACNC,YAAY,OACZC,SAAUrB,EACVP,KAAK,YAIX,kBAACY,EAAA,EAAMkB,QAAP,KACE,kBAAC3D,EAAA,EAAD,CAAQ8C,MAAM,QACZ,kBAACc,EAAA,EAAD,CAAM/B,KAAK,QADb,WAIA,kBAAC7B,EAAA,EAAD,CAAQ8C,MAAM,QAAQ7C,QAnFb,WAUXiC,EAAOL,KAAKgC,OAAS,GACrB3B,EAAOJ,YAAY+B,OAAS,GAVV,SAACC,GACnB,IAAIC,EAAO,IAAIC,eAGf,OAFAD,EAAKpC,KAAK,OAAQmC,GAAK,GACvBC,EAAKE,OACiB,KAAfF,EAAKG,OAOZC,CAAYjC,EAAOH,WACnBG,EAAOD,MAAM4B,OAAS,GACtB3B,EAAOF,YAAY6B,OAAS,IAElB,EACV/F,EAAUsG,WAAW,WAAWC,IAAInC,GACpCN,GAAQ,GACR9C,EAAQoB,KAAK,aAEboE,MAAM,mCA+DF,kBAACV,EAAA,EAAD,CAAM/B,KAAK,UADb,cA8DO0C,EArDA,SAACC,GACd,IAAMC,EAAWC,cAEX5F,EAAUC,cACV4F,EAFkB,CAAC,YAAa,OAAQ,WAE1BC,KAAI,SAACC,GAAD,OACtB,kBAAC,IAAD,CAAM/E,GAAI,IAAM+E,GACd,kBAACzF,EAAA,EAAKO,KAAN,CAAWkF,MAAI,EAAChF,OAAQ4E,EAASK,UAAY,IAAMD,GAChDA,EAAKE,OAAO,GAAGC,cAAgBH,EAAKI,MAAM,QAgBpCC,aAAY,SAAC5G,GAAD,OAAsBA,EAAMD,UAAUI,QAE/D,OACE,6BACE,kBAACW,EAAA,EAAD,CAAM0D,MAAM,OAAOrD,UAAQ,EAACC,WAAS,EAACwB,WAAS,GAC7C,kBAAC9B,EAAA,EAAKO,KAAN,KACE,+BAEDgF,EACD,kBAACvF,EAAA,EAAKA,KAAN,CAAWW,SAAS,SAClB,kBAACX,EAAA,EAAKO,KAAN,KACE,kBAAC0D,EAAA,EAAD,CAAO8B,KAAK,SAAS3B,YAAY,YAAYV,MAAM,UAErD,kBAAC1D,EAAA,EAAKO,KAAN,KACE,kBAAC,EAAD,OAKF,kBAACP,EAAA,EAAKO,KAAN,CAAWI,SAAS,SAClB,kBAACC,EAAA,EAAD,CAAQ8C,MAAM,MAAMC,MAAM,SAAS9C,QA/B7B,WACd7C,SAEGgI,UACAC,MAAK,WACJvG,EAAQoB,KAAK,QAEdoF,OAAM,SAACC,GACNjB,MAAMiB,EAAMC,cAuBR,iBCjKCC,G,OAAb,4MACEC,WAAaC,sBADf,uDAGI,OACE,6BACE,kBAAC,EAAD,MACA,kBAACnF,EAAA,EAAD,CAAWC,MAAI,GACb,kBAACe,EAAA,EAAD,CACEoE,IAAI,4EACJrG,KAAK,QACLsG,UAAQ,IAEV,m6BAZV,GAA+BC,cAsChBC,eAJS,SAACzH,GAAD,MAAiB,KAEd,GAEZyH,CAA6CN,G,kBC9BvCO,E,4MACnB1H,MAAQ,CACN2H,WAAW,G,EAEbC,YAAc,WACZ,EAAKC,SAAS,CACZF,WAAY,EAAK3H,MAAM2H,a,uDAKzB,OACE,kBAACG,EAAA,EAAD,CAAMnG,QAASoG,KAAKH,YAAaI,MAAO,CAACC,OAAO,SAC9C,kBAAC/E,EAAA,EAAD,CAAOoE,IAAKS,KAAK7B,MAAMzC,WACvB,kBAACqE,EAAA,EAAKpD,QAAN,KACE,kBAACoD,EAAA,EAAKzF,OAAN,KAAc0F,KAAK7B,MAAM3C,MACzB,kBAACuE,EAAA,EAAKI,KAAN,KAAYH,KAAK7B,MAAMiC,UACvB,kBAACL,EAAA,EAAKM,YAAN,KAAmBL,KAAK7B,MAAM1C,cAEhC,kBAACW,EAAA,EAAD,CAAOd,KAAM0E,KAAK/H,MAAM2H,UAAWvD,WAAS,EAACC,QAAS0D,KAAKH,aACzD,kBAACzD,EAAA,EAAM9B,OAAP,KAAe0F,KAAK7B,MAAM3C,MAC1B,kBAACY,EAAA,EAAMO,QAAP,CAAe2D,OAAK,GAClB,kBAACnF,EAAA,EAAD,CAAOjC,KAAK,SAASqG,IAAKS,KAAK7B,MAAMzC,WACrC,kBAACU,EAAA,EAAMiE,YAAP,KACE,kBAAC/F,EAAA,EAAD,qBACA,kBAACiG,EAAA,EAAD,CAAMC,UAAQ,GACXR,KAAK7B,MAAMxC,YAAY4C,KAAI,SAACkC,GAAD,OAC1B,kBAACF,EAAA,EAAKjH,KAAN,KAAYmH,OAGhB,kBAACnG,EAAA,EAAD,eACA,2BAAI0F,KAAK7B,MAAMvC,e,GA/BW6D,aCHlCiB,G,OAAwB,WAC5BC,8BAAoB,CAAC,CAAE5C,WAAY,aACnC,IAAM6C,EAAU/B,aAAY,SAAC5G,GAAD,OAAgBA,EAAMR,UAAUoJ,QAAQD,WACpE,YAAe3H,GAAX2H,EACK,8BAEAA,EAAQrC,KAAI,SAAC1C,GAAD,OACjB,kBAAC,EAAD,CACEL,KAAMK,EAAOL,KACbE,SAAUG,EAAOH,SACjBD,YAAaI,EAAOJ,YACpBE,YAAaE,EAAOF,mBAyBb+D,eAJS,SAACzH,GAAD,MAAiB,KAEd,GAEZyH,EAnBkB,WAC/B,OACE,6BACE,kBAAC,EAAD,MACA,kBAACvF,EAAA,EAAD,CAAW8F,MAAO,CAAEa,UAAW,QAG7B,kBAACf,EAAA,EAAKjD,MAAN,KACE,kBAAC,EAAD,OAEF,yBAAKzC,UAAU,oBC7BR0G,EARF,WACX,OACE,6BACE,kBAAC,EAAD,Q,SC2MSC,EA9LM,WACnB,IAAMvI,EAAUC,cACZuI,EAAKlK,cAFgB,EAGOuB,mBAAS,CACvC4I,MAAO,GACPC,SAAU,KALa,mBAGlBC,EAHkB,KAGRC,EAHQ,OAOC/I,mBAAS,CACjC4I,OAAO,EACPC,UAAU,EACVhC,QAAS,KAVc,mBAOlBD,EAPkB,KAOXoC,EAPW,KAiGzB,OACE,6BACE,kBAAC5G,EAAA,EAAD,CACEF,UAAU,SACV+G,cAAc,SACdtB,MAAO,CAAEuB,OAAQ,QAASC,gBAAiB,kBAE3C,kBAAC/G,EAAA,EAAKM,OAAN,CAAaiF,MAAO,CAAEyB,SAAU,UAC9B,kBAACpH,EAAA,EAAD,CACEE,UAAU,SACViC,MAAM,SACNvD,KAAK,OACLyI,UAAQ,EACR1B,MAAO,CAAE2B,cAAe,SAExB,kBAACrE,EAAA,EAAD,CAAM/B,KAAK,OAAOtC,KAAK,SAPzB,gBAUA,kBAAC2D,EAAA,EAAD,CAAM3D,KAAK,SACT,kBAACgB,EAAA,EAAD,CAAS2H,OAAK,GACZ,kBAAChF,EAAA,EAAKG,MAAN,CACEC,OAAK,EACL6B,KAAK,OACLgD,aAAa,OACb3E,YAAY,QACZjB,MAAOkF,EAASF,MAChB9D,SAAU,SAAC2E,GACTV,EAAY,2BAAKD,GAAN,IAAgBF,MAAOa,EAAE9F,OAAOC,UAE7CgD,MAAOA,EAAMgC,QAEf,kBAACrE,EAAA,EAAKG,MAAN,CACEC,OAAK,EACL6B,KAAK,OACL3G,KAAK,WACLgF,YAAY,WACZ2E,aAAa,OACb5F,MAAOkF,EAASD,SAChB/D,SAAU,SAAC2E,GACTV,EAAY,2BAAKD,GAAN,IAAgBD,SAAUY,EAAE9F,OAAOC,UAEhDgD,MAAOA,EAAMiC,WAEf,kBAACxH,EAAA,EAAD,CACEsD,OAAK,EACLR,MAAM,SACN7C,QAlIA,WACZ7C,SAEGiL,2BAA2BZ,EAASF,MAAOE,EAASD,UACpDnC,MAAK,SAACiD,GACc,MAAfA,EAAO7J,MACT6I,EAAGlD,WAAW,SAASmE,IAAID,EAAO7J,KAAK+J,KAAKC,IAAI,CAC9CC,SAAU,QACVnB,MAAOe,EAAO7J,KAAK8I,QAGvBzI,EAAQoB,KAAK,iBAEdoF,OAAM,SAACC,GACUA,EAAMoD,KAAtB,IACIC,EAAerD,EAAMC,QACzBlB,MAAMsE,OAmHEtC,MAAO,CAAEuC,aAAc,QAJzB,WAQA,kBAAC7I,EAAA,EAAD,CACEsD,OAAK,EACLR,MAAM,OACN7C,QAtHM,WAClBI,QAAQC,IAAI,oBACZ,IAAIwI,EAAW,IAAI1L,OAAc2L,mBACjC3L,SAEG4L,gBAAgBF,GAChBzD,MAAK,SAACiD,GACc,MAAfA,EAAO7J,MACT6I,EAAGlD,WAAW,SAASmE,IAAID,EAAO7J,KAAK+J,KAAKC,IAAI,CAC9CC,SAAU,QACVnB,MAAOe,EAAO7J,KAAK8I,WAIxBjC,OAAM,SAACC,GACUA,EAAMoD,KACHpD,EAAMC,QACbD,EAAMgC,MACDhC,EAAM0D,eAqGf9D,MAAI,EACJ+D,cAAc,OACd5C,MAAO,CAAEuC,aAAc,QAEvB,kBAACjF,EAAA,EAAD,CAAM/B,KAAK,WARb,4BAWA,kBAAC7B,EAAA,EAAD,CACEsD,OAAK,EACLR,MAAM,OACN7C,QA3GK,WACjBI,QAAQC,IAAI,eACZlD,SAEG+L,oBACA9D,MAAK,SAACiD,GACc,MAAfA,EAAO7J,OACT4B,QAAQC,IAAIgI,EAAO7J,MACnB6I,EAAGlD,WAAW,SAASmE,IAAID,EAAO7J,KAAK+J,KAAKC,IAAI,CAC9CC,SAAU,kBACVnB,MAAO,KAGTzI,EAAQoB,KAAK,kBAGhBoF,OAAM,SAACC,GACUA,EAAMoD,KACHpD,EAAMC,YA0FjBL,MAAI,EACJ+D,cAAc,QAEd,kBAACtF,EAAA,EAAD,CAAM/B,KAAK,gBAPb,sBAYc,IAAjB0D,EAAMC,QACL,8BAEA,kBAAC4D,EAAA,EAAD,CACE7D,OAAK,EACL8D,OAAO,qBACPzI,QAAS2E,EAAMC,UAInB,kBAACxF,EAAA,EAAD,CAAQsD,OAAK,EAACgD,MAAO,CAAEa,UAAW,QAAUmC,OAAK,EAACrJ,QAxG3C,WACb7C,SAEGmM,+BAA+B9B,EAASF,MAAOE,EAASD,UACxDnC,MAAK,SAACiD,GACc,MAAfA,EAAO7J,MACT6I,EAAGlD,WAAW,SAASmE,IAAID,EAAO7J,KAAK+J,KAAKC,IAAI,CAC9CC,SAAU,QACVnB,MAAOe,EAAO7J,KAAK8I,QAGvBzI,EAAQoB,KAAK,iBAEdoF,OAAM,SAACC,GACUA,EAAMoD,KAAtB,IACIC,EAAerD,EAAMC,QACzBmC,EAAS,CAAEJ,OAAO,EAAMC,UAAU,EAAMhC,QAASoD,SAyF7C,4CCzIG7C,G,OAAAA,eA7CH,WACV,IAAMyD,EAAkB,CACtB,CACEC,KAAM,aACNC,UAAWjE,GAEb,CACEgE,KAAM,WACNC,UAAWC,GAEb,CACEF,KAAM,QACNC,UAAWtC,GAEb,CACEqC,KAAM,gBACNC,UAAWrC,IAITuC,GADGxM,cACQyM,eAWjB,OATAzM,SAAgB0M,oBAAmB,SAACrL,GACtB,MAARA,GACFmL,EAAS,CACPpL,KAAM,aACNC,KAAM,CAAE+J,IAAK/J,EAAK+J,IAAKE,SAAU,aAMrC,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGc,EAAO5E,KAAI,SAACmF,GAAD,OACV,kBAAC,IAAD,CAAON,KAAMM,EAAMN,KAAMC,UAAWK,EAAML,UAAWM,OAAO,OAE9D,kBAAC,IAAD,CAAOP,KAAK,IAAIC,UAAWvJ,WCrC/B8J,EAAQC,YAAYjM,EADL,IAEfkM,EAAW,CACf/M,WACAgN,OARgB,CAChBC,YAAa,QAQbT,SAAUK,EAAML,SAChBU,mDAGFC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUR,MAAOA,GACf,kBAAC,6BAA+BE,EAC9B,kBAAC,EAAD,SAINO,SAASC,eAAe,W","file":"static/js/main.93f974ef.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nconst config = {\r\n  apiKey: \"AIzaSyDWK00mcybySnW_JgfsBCqZbeTPkUP4DEY\",\r\n  authDomain: \"meal-planner-92a60.firebaseapp.com\",\r\n  databaseURL: \"https://meal-planner-92a60.firebaseio.com\",\r\n  projectId: \"meal-planner-92a60\",\r\n  storageBucket: \"meal-planner-92a60.appspot.com\",\r\n  messagingSenderId: \"107484953566\",\r\n  appId: \"1:107484953566:web:22b2bb7186c4d98d3d7b4f\",\r\n  measurementId: \"G-CK0YC286NN\",\r\n};\r\nfirebase.initializeApp(config);\r\nfirebase.firestore();\r\nexport default firebase;\r\n","interface User {\r\n  uid: string;\r\n  username: string;\r\n}\r\ninterface LocalData {\r\n  currentPage: string;\r\n  user?: User;\r\n}\r\nconst initialState: LocalData = {\r\n  currentPage: \"Dashboard\",\r\n};\r\n\r\nexport default (state = initialState, action: any): LocalData => {\r\n  switch (action.type) {\r\n    case \"updateUser\":\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport { firebaseReducer, FirebaseReducer } from \"react-redux-firebase\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport localData from \"./localData\";\r\n\r\n// export interface Recipe {\r\n//   name:string,\r\n//   id?:string,\r\n//   description:string,\r\n//   imageSrc:string,\r\n//   owner?:any, // <-- Fix this to whatever\r\n//   ingredients:string[],\r\n//   takeAway?:boolean,\r\n//   steps:string,\r\n// }\r\n\r\n// interface user{\r\n//   name:string,\r\n//   id:string,\r\n//   username?:string,\r\n//   password?:string,\r\n// }\r\n\r\n// interface Schema {\r\n//   recipes: Recipe,\r\n//   users: user,\r\n// }\r\n\r\n// interface RootState {\r\n//   firebase: FirebaseReducer.Reducer,\r\n//   firestore:any,\r\n//   localData:any,\r\n// }\r\n\r\nconst rootReducer = combineReducers({\r\n  firebase: firebaseReducer,\r\n  firestore: firestoreReducer,\r\n  localData: localData,\r\n});\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\nexport default rootReducer;\r\n","import React, { Component, useState } from \"react\";\r\nimport { Button, Visibility, Menu, Container } from \"semantic-ui-react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport default function HomeNavBar() {\r\n  const [fixedMenu, setFixedMenu] = useState(false);\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div>\r\n      <Visibility\r\n        onTopPassed={() => setFixedMenu(true)}\r\n        onTopVisible={() => setFixedMenu(false)}\r\n        once={false}\r\n      >\r\n        <Menu\r\n          fixed={fixedMenu ? \"top\" : undefined}\r\n          size=\"large\"\r\n          inverted={true}\r\n          pointing\r\n          secondary\r\n        >\r\n          <Menu.Item as=\"a\" active>\r\n            Home\r\n          </Menu.Item>\r\n          <Menu.Item as=\"a\">\r\n            <Link to=\"/dashboard\">Test</Link>\r\n          </Menu.Item>\r\n          <Menu.Item position=\"right\">\r\n            <Button onClick={() => history.push(\"/authenticate\")}>\r\n              Sign In\r\n            </Button>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Visibility>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Header,\r\n  Container,\r\n  Segment,\r\n  Grid,\r\n  Image,\r\n} from \"semantic-ui-react\";\r\nimport NavBar from \"../../Components/HomeNavBar/HomeNavBar\";\r\n\r\nimport \"./Homepage.css\";\r\n\r\nexport default function Homepage() {\r\n  useEffect(() => {\r\n    console.log(\"test\");\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Segment inverted>\r\n        <NavBar />\r\n        <Container text className=\"headerContainer\">\r\n          <Header\r\n            inverted\r\n            content=\"Meal Planner\"\r\n            textAlign=\"center\"\r\n            size=\"huge\"\r\n          />\r\n        </Container>\r\n      </Segment>\r\n      <Segment id=\"informationSegment\">\r\n        <Grid centerd container stackable>\r\n          <Grid.Row columns=\"equal\" textAlign=\"center\">\r\n            <Grid.Column width={10}>\r\n              <Header size=\"huge\">Save Recipes</Header>\r\n              <p>\r\n                Lorem ipsum dolor, sit amet consectetur adipisicing elit. Non\r\n                reprehenderit possimus sunt dolorem, tenetur, quasi commodi\r\n                obcaecati vitae repudiandae, facere porro harum! Optio, ipsam\r\n                eligendi ad eum recusandae ullam a?\r\n              </p>\r\n            </Grid.Column>\r\n            <Grid.Column floated=\"right\">\r\n              <Image />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Segment>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useFirestore } from \"react-redux-firebase\";\r\nimport { Menu, Button, Input, Modal, Icon, Form } from \"semantic-ui-react\";\r\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nimport { Recipe } from \"./../../reducers/interfaces\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../reducers/store\";\r\ninterface Props {}\r\nconst AddRecipeModal = () => {\r\n  const firestore = useFirestore();\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false); //For the Modal for creating a new recipe\r\n  const [recipe, setRecipe] = useState<Recipe>({\r\n    name: \"\",\r\n    description: \"\",\r\n    imageSrc: \"\",\r\n    ingredients: [],\r\n    steps: \"\",\r\n  });\r\n  const handleChange = (event: any) => {\r\n    const name = event.target.name;\r\n    let value = event.target.value;\r\n    if (name === \"ingredients\") {\r\n      value = value.split(\"\\n\");\r\n    }\r\n    setRecipe({\r\n      ...recipe,\r\n      [name]: value,\r\n    });\r\n    console.log(recipe);\r\n  };\r\n  const submit = () => {\r\n    const imageExists = (url: string) => {\r\n      var http = new XMLHttpRequest();\r\n      http.open(\"HEAD\", url, false);\r\n      http.send();\r\n      return http.status != 404;\r\n    };\r\n\r\n    let isValid = false;\r\n    if (\r\n      recipe.name.length > 0 &&\r\n      recipe.description.length > 0 &&\r\n      imageExists(recipe.imageSrc) &&\r\n      recipe.steps.length > 0 &&\r\n      recipe.ingredients.length > 0\r\n    ) {\r\n      isValid = true;\r\n      firestore.collection(\"recipes\").add(recipe);\r\n      setOpen(false);\r\n      history.push(\"/recipes\");\r\n    } else {\r\n      alert(\"Invalid Data please try again\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      closeIcon\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      trigger={\r\n        <Button color=\"olive\" align=\"center\">\r\n          Add Recipe\r\n        </Button>\r\n      }\r\n    >\r\n      <Modal.Header align=\"center\">Add New Recipe</Modal.Header>\r\n      <Modal.Content scrolling>\r\n        <Form>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input\r\n              fluid\r\n              label=\"Recipe Name\"\r\n              placeholder=\"Pizza\"\r\n              onChange={handleChange}\r\n              name=\"name\"\r\n            />\r\n            <Form.Input\r\n              fluid\r\n              label=\"Description\"\r\n              placeholder=\"Italian Pizza\"\r\n              onChange={handleChange}\r\n              name=\"description\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Input\r\n            label=\"Image link\"\r\n            placeholder=\"https://i.imgur.com/b00w470.jpg\"\r\n            onChange={handleChange}\r\n            name=\"imageSrc\"\r\n          />\r\n          <Form.TextArea\r\n            label=\"Ingredients\"\r\n            placeholder={\r\n              \"60% Water \\n100% Flour \\nSalt \\nYeast \\nMozzarella \\nTomato sauce\"\r\n            }\r\n            onChange={handleChange}\r\n            name=\"ingredients\"\r\n          />\r\n          <Form.TextArea\r\n            label=\"Steps\"\r\n            placeholder=\"bake\"\r\n            onChange={handleChange}\r\n            name=\"steps\"\r\n          />\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button color=\"grey\">\r\n          <Icon name=\"eye\" />\r\n          Preview\r\n        </Button>\r\n        <Button color=\"green\" onClick={submit}>\r\n          <Icon name=\"check\"></Icon>\r\n          Submit\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst TopNav = (props: Props) => {\r\n  const location = useLocation();\r\n  const links: string[] = [\"dashboard\", \"plan\", \"recipes\"];\r\n  const history = useHistory();\r\n  const Links = links.map((link) => (\r\n    <Link to={\"/\" + link}>\r\n      <Menu.Item link active={location.pathname == \"/\" + link}>\r\n        {link.charAt(0).toUpperCase() + link.slice(1)}\r\n      </Menu.Item>\r\n    </Link>\r\n  ));\r\n\r\n  const signOut = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error: any) => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n  const user = useSelector((state: RootState) => state.localData.user);\r\n\r\n  return (\r\n    <div>\r\n      <Menu color=\"teal\" pointing secondary stackable>\r\n        <Menu.Item>\r\n          <img />\r\n        </Menu.Item>\r\n        {Links}\r\n        <Menu.Menu position=\"right\">\r\n          <Menu.Item>\r\n            <Input icon=\"search\" placeholder=\"Search...\" color=\"teal\" />\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <AddRecipeModal />\r\n          </Menu.Item>\r\n          {/* <Menu.Item>\r\n            {user==null ? <div /> : user.uid}\r\n          </Menu.Item> */}\r\n          <Menu.Item position=\"right\">\r\n            <Button color=\"red\" align=\"center\" onClick={signOut}>\r\n              Sign Out\r\n            </Button>\r\n          </Menu.Item>\r\n        </Menu.Menu>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopNav;\r\n","import React, { Component, createRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Image } from \"semantic-ui-react\";\r\n\r\nimport TopNav from \"../../Components/TopNav/TopNav\";\r\nimport \"./Dashboard.css\";\r\n\r\nexport class Dashboard extends Component {\r\n  contextRef = createRef();\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TopNav />\r\n        <Container text>\r\n          <Image\r\n            src=\"https://www.vertex42.com/calendars/images/2020-calendar-with-holidays.png\"\r\n            size=\"large\"\r\n            centered\r\n          />\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. A earum\r\n            laudantium voluptates enim totam, eligendi doloribus similique\r\n            deserunt libero vero provident reprehenderit voluptatum omnis, culpa\r\n            accusamus cupiditate placeat odio minus. Lorem ipsum dolor sit amet\r\n            consectetur adipisicing elit. Dolores accusamus rerum illo minus,\r\n            magni nisi aliquam provident dolore atque incidunt, possimus\r\n            voluptate neque veritatis exercitationem natus distinctio inventore,\r\n            eius ipsa? Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n            Deserunt, culpa. Nisi doloremque error ea alias, dolore quod\r\n            consectetur repellat assumenda perspiciatis omnis quam hic? Cum quae\r\n            quis cupiditate quam non! Lorem, ipsum dolor sit amet consectetur\r\n            adipisicing elit. Magni quas dolor sit magnam nisi mollitia minus\r\n            quaerat numquam iusto, fuga est. Voluptatem quaerat iste fuga\r\n            laborum non architecto maiores similique.\r\n          </p>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\n","import React, { Component } from \"react\";\r\nimport { Card, Image, Modal, Header, List } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  name: string;\r\n  imageSrc: string;\r\n  category?: string;\r\n  description: string;\r\n  ingredients: string[];\r\n  steps?: string;\r\n}\r\n\r\ninterface State {\r\n  showModal: boolean;\r\n}\r\n\r\nexport default class RecipeCard extends Component<Props, State> {\r\n  state = {\r\n    showModal: false,\r\n  };\r\n  switchModal = () => {\r\n    this.setState({\r\n      showModal: !this.state.showModal,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card onClick={this.switchModal} style={{margin:\"20px\"}}>\r\n        <Image src={this.props.imageSrc} />\r\n        <Card.Content>\r\n          <Card.Header>{this.props.name}</Card.Header>\r\n          <Card.Meta>{this.props.category}</Card.Meta>\r\n          <Card.Description>{this.props.description}</Card.Description>\r\n        </Card.Content>\r\n        <Modal open={this.state.showModal} closeIcon onClose={this.switchModal}>\r\n          <Modal.Header>{this.props.name}</Modal.Header>\r\n          <Modal.Content image>\r\n            <Image size=\"medium\" src={this.props.imageSrc} />\r\n            <Modal.Description>\r\n              <Header>Ingredients:</Header>\r\n              <List bulleted>\r\n                {this.props.ingredients.map((ingredient) => (\r\n                  <List.Item>{ingredient}</List.Item>\r\n                ))}\r\n              </List>\r\n              <Header>Steps:</Header>\r\n              <p>{this.props.steps}</p>\r\n            </Modal.Description>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { useFirestoreConnect } from \"react-redux-firebase\";\r\n\r\nimport TopNav from \"../../Components/TopNav/TopNav\";\r\nimport RecipeCard from \"../../Components/RecipeCard/RecipeCard\";\r\nimport { Container, Grid, Rail, Modal, Button, Card } from \"semantic-ui-react\";\r\n\r\nimport \"./Recipes.css\";\r\n\r\ninterface Props {}\r\ninterface State {}\r\n\r\nconst RecipeCards: React.FC = () => {\r\n  useFirestoreConnect([{ collection: \"recipes\" }]);\r\n  const recipes = useSelector((state: any) => state.firestore.ordered.recipes);\r\n  if (recipes == undefined) {\r\n    return <div></div>;\r\n  } else {\r\n    return recipes.map((recipe: any) => (\r\n      <RecipeCard\r\n        name={recipe.name}\r\n        imageSrc={recipe.imageSrc}\r\n        description={recipe.description}\r\n        ingredients={recipe.ingredients}\r\n      />\r\n    ));\r\n  }\r\n};\r\n\r\nconst Recipes: React.FC<Props> = () => {\r\n  return (\r\n    <div>\r\n      <TopNav />\r\n      <Container style={{ marginTop: \"3em\" }}>\r\n        {/* <Grid stackable centered veritcalAlign=\"middle\">\r\n        </Grid> */}\r\n        <Card.Group>\r\n          <RecipeCards />\r\n        </Card.Group>\r\n        <div className=\"recipeGrid\"></div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => ({});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Recipes);\r\n","import React from 'react'\r\nimport TopNav from \"./../../Components/TopNav/TopNav\"\r\n\r\nconst Plan = () => {\r\n  return (\r\n    <div>\r\n      <TopNav />\r\n      \r\n    </div>\r\n  )\r\n}\r\nexport default Plan","import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Form,\r\n  Segment,\r\n  Button,\r\n  Header,\r\n  Image,\r\n  Icon,\r\n  Message,\r\n  Modal,\r\n} from \"semantic-ui-react\";\r\nimport { useFirebase } from \"react-redux-firebase\";\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nconst Authenticate = () => {\r\n  const history = useHistory();\r\n  let db = firebase.firestore();\r\n  const [userInfo, setUserInfo] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [error, setError] = useState({\r\n    email: false,\r\n    password: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const login = () => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(userInfo.email, userInfo.password)\r\n      .then((result) => {\r\n        if (result.user != null) {\r\n          db.collection(\"users\").doc(result.user.uid).set({\r\n            username: \"Koala\",\r\n            email: result.user.email,\r\n          });\r\n        }\r\n        history.push(\"/dashboard\");\r\n      })\r\n      .catch((error) => {\r\n        let errorCode = error.code;\r\n        let errorMessage = error.message;\r\n        alert(errorMessage);\r\n      });\r\n  };\r\n\r\n  const googleLogIn = () => {\r\n    console.log(\"work in progress\");\r\n    let provider = new firebase.auth.GoogleAuthProvider();\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        if (result.user != null) {\r\n          db.collection(\"users\").doc(result.user.uid).set({\r\n            username: \"Koala\",\r\n            email: result.user.email,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        let errorCode = error.code;\r\n        let errorMessage = error.message;\r\n        let email = error.email;\r\n        let credential = error.credential;\r\n      });\r\n  };\r\n\r\n  const guestLogIn = () => {\r\n    console.log(\"guest login\");\r\n    firebase\r\n      .auth()\r\n      .signInAnonymously()\r\n      .then((result) => {\r\n        if (result.user != null) {\r\n          console.log(result.user);\r\n          db.collection(\"users\").doc(result.user.uid).set({\r\n            username: \"Anonymous Koala\",\r\n            email: \"\",\r\n          });\r\n\r\n          history.push(\"/dashboard\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        let errorCode = error.code;\r\n        let errorMessage = error.message;\r\n      });\r\n  };\r\n\r\n  const signUp = () => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(userInfo.email, userInfo.password)\r\n      .then((result) => {\r\n        if (result.user != null) {\r\n          db.collection(\"users\").doc(result.user.uid).set({\r\n            username: \"Koala\",\r\n            email: result.user.email,\r\n          });\r\n        }\r\n        history.push(\"/dashboard\");\r\n      })\r\n      .catch((error) => {\r\n        let errorCode = error.code;\r\n        let errorMessage = error.message;\r\n        setError({ email: true, password: true, message: errorMessage });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        textAlign=\"center\"\r\n        verticalAlign=\"middle\"\r\n        style={{ height: \"100vh\", backgroundColor: \"205, 214, 221\" }}\r\n      >\r\n        <Grid.Column style={{ maxWidth: \"500px\" }}>\r\n          <Header\r\n            textAlign=\"center\"\r\n            color=\"orange\"\r\n            size=\"huge\"\r\n            dividing\r\n            style={{ paddingBottom: \"20px\" }}\r\n          >\r\n            <Icon name=\"food\" size=\"huge\" />\r\n            Meal Planner\r\n          </Header>\r\n          <Form size=\"large\">\r\n            <Segment piled>\r\n              <Form.Input\r\n                fluid\r\n                icon=\"user\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"email\"\r\n                value={userInfo.email}\r\n                onChange={(e) => {\r\n                  setUserInfo({ ...userInfo, email: e.target.value });\r\n                }}\r\n                error={error.email}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon=\"lock\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                iconPosition=\"left\"\r\n                value={userInfo.password}\r\n                onChange={(e) => {\r\n                  setUserInfo({ ...userInfo, password: e.target.value });\r\n                }}\r\n                error={error.password}\r\n              />\r\n              <Button\r\n                fluid\r\n                color=\"orange\"\r\n                onClick={login}\r\n                style={{ marginBottom: \"5px\" }}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Button\r\n                fluid\r\n                color=\"blue\"\r\n                onClick={googleLogIn}\r\n                icon\r\n                labelPosition=\"left\"\r\n                style={{ marginBottom: \"5px\" }}\r\n              >\r\n                <Icon name=\"google\" />\r\n                Login/SignUp with Google\r\n              </Button>\r\n              <Button\r\n                fluid\r\n                color=\"grey\"\r\n                onClick={guestLogIn}\r\n                icon\r\n                labelPosition=\"left\"\r\n              >\r\n                <Icon name=\"user secret\" />\r\n                Login as a Guest\r\n              </Button>\r\n            </Segment>\r\n          </Form>\r\n          {error.message == \"\" ? (\r\n            <div></div>\r\n          ) : (\r\n            <Message\r\n              error\r\n              header=\"SignUp/Login Error\"\r\n              content={error.message}\r\n            />\r\n          )}\r\n\r\n          <Button fluid style={{ marginTop: \"15px\" }} basic onClick={signUp}>\r\n            <h5>Sign Up</h5>\r\n          </Button>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Authenticate;\r\n","import React, { Component } from \"react\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport Homepage from \"./views/Homepage/Homepage\";\r\nimport Dashboard from \"./views/Dashboard/Dashboard\";\r\nimport Recipes from \"./views/Recipes/Recipes\";\r\nimport Plan from \"./views/Plan/Plan\";\r\nimport Authenticate from \"./views/Authenticate/Authenticate\";\r\nimport \"./App.css\";\r\n\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\ninterface route {\r\n  path: string;\r\n  component: any;\r\n}\r\n\r\nconst App = () => {\r\n  const routes: route[] = [\r\n    {\r\n      path: \"/dashboard\",\r\n      component: Dashboard,\r\n    },\r\n    {\r\n      path: \"/recipes\",\r\n      component: Recipes,\r\n    },\r\n    {\r\n      path: \"/plan\",\r\n      component: Plan,\r\n    },\r\n    {\r\n      path: \"/authenticate\",\r\n      component: Authenticate,\r\n    },\r\n  ];\r\n  let db = firebase.firestore();\r\n  const dispatch = useDispatch();\r\n\r\n  firebase.auth().onAuthStateChanged((user) => {\r\n    if (user != null) {\r\n      dispatch({\r\n        type: \"updateUser\",\r\n        user: { uid: user.uid, username: \"test\" },\r\n      });\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          {routes.map((route) => (\r\n            <Route path={route.path} component={route.component} exact={true} />\r\n          ))}\r\n          <Route path=\"*\" component={Homepage}></Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect()(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n\r\nimport firebase from \"./firebase\";\r\nimport \"firebase/firestore\";\r\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\r\nimport { createFirestoreInstance } from \"redux-firestore\";\r\n\r\nimport rootReducer from \"./reducers/store\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nconst rrfConfig = {\r\n  userProfile: \"user\",\r\n};\r\n\r\nconst initialState = {};\r\nconst store = createStore(rootReducer, initialState);\r\nconst rrfProps = {\r\n  firebase,\r\n  config: rrfConfig,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance,\r\n};\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ReactReduxFirebaseProvider {...rrfProps}>\r\n        <App />\r\n      </ReactReduxFirebaseProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}